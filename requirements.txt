YTAudioBar – macOS Menu Bar App Requirements

1. Project Overview

YTAudioBar is a menu bar macOS app for streaming, downloading, and managing YouTube audio. It sits in the menu bar, giving users quick access to search, play, and manage audio without opening a full window.

The app is self-contained, requiring no external Python or setup. The yt-dlp binary is bundled and auto-updated in the background.

⸻

2. Target Platform
	•	Operating System: macOS 13+ (Ventura or newer)
	•	Architecture: Apple Silicon (ARM) and Intel x86_64
	•	Distribution: .dmg installer
	•	Open Source Hosting: GitHub / GitLab

⸻

3. Technical Stack
	•	Language: Swift 5+
	•	UI Framework: SwiftUI + AppKit (for menu bar integration)
	•	Audio Playback: AVFoundation / AVAudioPlayer
	•	YouTube Fetching: Bundled yt-dlp binary
	•	Networking & Async: URLSession + Combine
	•	Data Persistence: CoreData or SQLite (favorites, playlists) + FileManager for downloads
	•	Binary Auto-update: GitHub API to fetch latest yt-dlp release
	•	App Auto-update: Sparkle framework

⸻

4. Functional Requirements

4.1 Menu Bar Behavior
	•	App sits in macOS menu bar with an icon.
	•	Clicking the icon opens a compact dropdown menu for:
	•	Search bar
	•	Currently playing track
	•	Playback controls
	•	Queue management
	•	Quick access to favorites
	•	Download options
	•	Option to keep a mini player open (optional) for more detailed control.

4.2 Search & Fetch
	•	Users can type search terms in the dropdown search bar.
	•	Display compact results with title, author, duration, and small thumbnail.
	•	Selecting a result starts streaming audio immediately.

4.3 Audio Streaming & Playback
	•	Features accessible from dropdown or mini player:
	•	Play / Pause / Stop
	•	Skip forward/backward
	•	Seek to position
	•	Volume control
	•	Display current track metadata in the menu bar or mini player.

4.4 Queue & Favorites
	•	Queue system accessible from dropdown:
	•	Add/remove/reorder tracks
	•	Favorites & folders management:
	•	Create, rename, delete folders
	•	Quick add/remove from favorites

4.5 Download Audio
	•	Option to download audio from dropdown menu.
	•	Select audio quality before download.
	•	Show progress in dropdown or notification center.
	•	Downloads saved in ~/Music/YTAudioBar or custom folder.

4.6 Bundled yt-dlp Binary
	•	Included precompiled binary for Intel & ARM macOS.
	•	Auto-update mechanism:
	•	Check GitHub for latest release
	•	Replace binary automatically if a newer version exists
	•	Fully invisible to user; no Python required.

4.7 App Settings
	•	Accessible from dropdown menu or mini player.
	•	Settings include:
	•	Default download location
	•	Preferred audio quality
	•	Auto-update toggle for yt-dlp
	•	Theme (light/dark mode)
	•	Menu bar behavior (icon only, show mini player on hover, etc.)

4.8 Notifications
	•	System notifications for:
	•	Download completion
	•	Playback finished
	•	yt-dlp update applied

⸻

5. Non-functional Requirements
	•	Performance: Minimal memory/CPU footprint while in menu bar.
	•	Stability: Robust handling of broken URLs or network issues.
	•	Security: App signed/notarized; no sensitive data stored.
	•	Scalability: Handle large queues and favorites efficiently.
	•	Open Source Friendly: Modular code, documented, contribution guidelines.

⸻

6. User Interface Requirements
	•	Menu Bar Dropdown:
	•	Compact search bar
	•	List of search results (scrollable)
	•	Playback controls
	•	Queue & favorites access
	•	Download button per track
	•	Mini Player (optional):
	•	Floating, resizable panel
	•	Detailed playback info
	•	Drag-and-drop reordering of queue

⸻

7. Packaging & Distribution
	•	Build as .dmg with bundled yt-dlp binary.
	•	Signed and notarized for macOS.
	•	Self-contained — no additional installs required.
	•	Host on website and GitHub for open-source contributions.

⸻

8. Future Enhancements
	•	Lyrics integration in mini player.
	•	Hotkeys for play/pause/skip.
	•	Cloud sync for favorites and playlists.
	•	Dark/light theme auto-switching based on macOS appearance.
